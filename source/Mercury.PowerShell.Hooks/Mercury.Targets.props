<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Target Name="GetVersionFromGit" BeforeTargets="BeforeBuild">
    <Exec Command="git describe --abbrev=60 --long --always"
          WorkingDirectory="$(SolutionDir)"
          StandardOutputImportance="High"
          ConsoleToMsBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="MercuryVersion"/>
    </Exec>
    <Message Text="MercuryVersion: $(MercuryVersion)" Importance="High"/>

    <PropertyGroup Condition="'$(MercuryVersion)' != ''">
      <RegexGitVersion>^v(.+)-(\d+)-g(.+)</RegexGitVersion>
      <FileVersion>$([System.Text.RegularExpressions.Regex]::Match($(MercuryVersion), $(RegexGitVersion)).Groups[1].Value)</FileVersion>
      <BuildVersion>$([System.Text.RegularExpressions.Regex]::Match($(MercuryVersion), $(RegexGitVersion)).Groups[1].Value)</BuildVersion>
      <AdditionalCommits>$([System.Text.RegularExpressions.Regex]::Match($(MercuryVersion), $(RegexGitVersion)).Groups[2].Value)</AdditionalCommits>
      <CommitSHA>$([System.Text.RegularExpressions.Regex]::Match($(MercuryVersion), $(RegexGitVersion)).Groups[3].Value)</CommitSHA>

      <FormattedVersion Condition="'$(AdditionalCommits)' == '0'">$(BuildVersion) SHA: $(CommitSHA)</FormattedVersion>
      <FormattedVersion Condition="'$(FormattedVersion)' == ''">$(BuildVersion) Commits: $(AdditionalCommits) SHA: $(CommitSHA)</FormattedVersion>

      <Version>$(FileVersion)</Version>
      <InformationalVersion>$(FormattedVersion)</InformationalVersion>
      <ProductVersion>$(FormattedVersion)</ProductVersion>
      <PackageVersion>$(BuildVersion)</PackageVersion>
    </PropertyGroup>
  </Target>

  <Target Name="GenerateDocumentationXml" AfterTargets="Build">
    <Exec Command="pwsh -nop -nol -noni -c '$(SolutionDir)/documentation/New-XmlDocumentation.ps1 -Language en-US -OutputDirectory $(ProjectDir)$(OutputPath)'"/>
  </Target>
</Project>
